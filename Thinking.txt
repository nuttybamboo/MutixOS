main parts:
1) task scheduling (PM)
2) file system  (FS)
3) virturl memory system (MM)
4) process communication (IPC)
5) rescue moudle
// 6) sand box  (I/O management)
and develope order was almost from 1) to 6)....

One problem for fether thinking: 
weather to set a system call interface to receive all the system calls and then distributed to each module...

3 levels:
r0: 5)
r1: 1) 2) 3) 4)
r3: applacations... maybe 6)..

every parts has it own stack and memory space...

what makes a OS unstable is the I/O drive...thus we isolated it in the sandbox...

the start process:
1) load the system image
2) init a gdt for current use...and init the ds fs...for properation of the 32bit mode
3) switch to the 32bit mode and start the whole init work of the kernel
4)  
	4.1)Init KRM : init some interaption and traps that should be deal with by the KRM part..
	4.2)Init SCI: interaptions and traps..
	4.3)Init MM: GDT, page tables and page fault inter caught...
	4.4)Init PM: init the task array, and Init process 0, then exec process 0
	4.5)Init FS: finish by process 0...
	4.5)Create other process...
